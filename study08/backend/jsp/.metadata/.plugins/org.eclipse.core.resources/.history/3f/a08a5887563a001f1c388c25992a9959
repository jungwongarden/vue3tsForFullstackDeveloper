package com.company.controller;

import com.company.dao.QnaDAO;
import com.company.dto.QnaDTO;
import com.fasterxml.jackson.databind.ObjectMapper;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.*;
import java.io.IOException;
import java.io.PrintWriter;
import java.time.LocalDateTime;
import java.util.List;

@WebServlet("/qna/*")
public class QnaController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private QnaDAO qnaDAO;
    private ObjectMapper objectMapper;

    public void init() {
        qnaDAO = new QnaDAO();
        objectMapper = new ObjectMapper();
    }

    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String action = request.getPathInfo();
        if (action == null) action = "/";

        switch (action) {
            case "/list":
                qnaList(request, response);
                break;
            case "/detail":
                qnaDetail(request, response);
                break;
            default:
                response.sendError(HttpServletResponse.SC_NOT_FOUND);
                break;
        }
    }

    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String action = request.getPathInfo();

        switch (action) {
            case "/questionInsert":
                questionInsert(request, response);
                break;
            case "/answerInsert":
                answerInsert(request, response);
                break;
            default:
                response.sendError(HttpServletResponse.SC_NOT_FOUND);
                break;
        }
    }

    protected void doPut(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String action = request.getPathInfo();

        switch (action) {
            case "/edit":
                qnaEdit(request, response);
                break;
            default:
                response.sendError(HttpServletResponse.SC_NOT_FOUND);
                break;
        }
    }

    protected void doDelete(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String action = request.getPathInfo();

        switch (action) {
            case "/delete":
                qnaDelete(request, response);
                break;
            default:
                response.sendError(HttpServletResponse.SC_NOT_FOUND);
                break;
        }
    }

    private void qnaList(HttpServletRequest request, HttpServletResponse response) throws IOException {
        List<QnaDTO> qnaList = qnaDAO.getQnaList();
        String json = objectMapper.writeValueAsString(qnaList);
        response.setContentType("application/json");
        response.setCharacterEncoding("UTF-8");
        PrintWriter out = response.getWriter();
        out.print(json);
        out.flush();
    }

    private void qnaDetail(HttpServletRequest request, HttpServletResponse response) throws IOException {
        int qno = Integer.parseInt(request.getParameter("qno"));
        QnaDTO qna = qnaDAO.getQnaDetail(qno);
        if (qna == null) {
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
            return;
        }
        String json = objectMapper.writeValueAsString(qna);
        response.setContentType("application/json");
        response.setCharacterEncoding("UTF-8");
        PrintWriter out = response.getWriter();
        out.print(json);
        out.flush();
    }

    private void questionInsert(HttpServletRequest request, HttpServletResponse response) throws IOException {
        QnaDTO qna = objectMapper.readValue(request.getInputStream(), QnaDTO.class);
        qna.setResdate(LocalDateTime.now());
        boolean isInserted = qnaDAO.questionInsert(qna);
        response.setContentType("application/json");
        response.setCharacterEncoding("UTF-8");
        response.setStatus(isInserted ? HttpServletResponse.SC_CREATED : HttpServletResponse.SC_BAD_REQUEST);
        PrintWriter out = response.getWriter();
        out.print("{\"result\":" + isInserted + "}");
        out.flush();
    }

    private void answerInsert(HttpServletRequest request, HttpServletResponse response) throws IOException {
        QnaDTO qna = objectMapper.readValue(request.getInputStream(), QnaDTO.class);
        qna.setResdate(LocalDateTime.now());
        boolean isInserted = qnaDAO.answerInsert(qna);
        response.setContentType("application/json");
        response.setCharacterEncoding("UTF-8");
        response.setStatus(isInserted ? HttpServletResponse.SC_CREATED : HttpServletResponse.SC_BAD_REQUEST);
        PrintWriter out = response.getWriter();
        out.print("{\"result\":" + isInserted + "}");
        out.flush();
    }

    private void qnaEdit(HttpServletRequest request, HttpServletResponse response) throws IOException {
        QnaDTO qna = objectMapper.readValue(request.getInputStream(), QnaDTO.class);
        boolean isUpdated = qnaDAO.qnaEdit(qna);
        response.setContentType("application/json");
        response.setCharacterEncoding("UTF-8");
        response.setStatus(isUpdated ? HttpServletResponse.SC_OK : HttpServletResponse.SC_BAD_REQUEST);
        PrintWriter out = response.getWriter();
        out.print("{\"result\":" + isUpdated + "}");
        out.flush();
    }

    private void qnaDelete(HttpServletRequest request, HttpServletResponse response) throws IOException {
        int qno = Integer.parseInt(request.getParameter("qno"));
        int lev = Integer.parseInt(request.getParameter("lev"));
        boolean isDeleted = qnaDAO.qnaDelete(qno, lev);
        response.setContentType("application/json");
        response.setCharacterEncoding("UTF-8");
        response.setStatus(isDeleted ? HttpServletResponse.SC_OK : HttpServletResponse.SC_BAD_REQUEST);
        PrintWriter out = response.getWriter();
        out.print("{\"result\":" + isDeleted + "}");
        out.flush();
    }
}